# postgres-stack.yaml

# 1. The PersistentVolume (PV) - This is CLUSTER-WIDE
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/postgres" # <-- Must match the directory on your worker node

---

# 2. The PersistentVolumeClaim (PVC) - This will be in the 'database-stack' namespace
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

# 3. The Secret - This will be in the 'database-stack' namespace
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  # password: mysecretpassword (base64 encoded)
  POSTGRES_PASSWORD: bXlzZWNyZXRwYXNzd29yZA==

---

# 4. The PostgreSQL Deployment - This will be in the 'database-stack' namespace
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc

---

# 5. The PostgreSQL Service - This will be in the 'database-stack' namespace
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

# 6. The Adminer Deployment - This will be in the 'database-stack' namespace
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
        - name: adminer
          image: adminer
          ports:
            - containerPort: 8080

---

# 7. The Adminer Service - This will be in the 'database-stack' namespace
apiVersion: v1
kind: Service
metadata:
  name: adminer-service
spec:
  type: NodePort
  selector:
    app: adminer
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30007 # You can optionally specify a port
